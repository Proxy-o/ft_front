version: "3"
services:
  nginx:
    container_name: nginx_container
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    networks:
      - mynetwork
    volumes:
      - ./log_nginx:/var/log/nginx
    depends_on:
      - backend
    environment:
      - VAULT_API_ADDR=http://vault:8200

  backend:
    container_name: backend_container
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - mynetwork
      - vault_nework
    volumes:
      - ./vault_data/cre/backend:/.vault
      - ./backend:/app
    stop_grace_period: 10s
    depends_on:
      db:
        condition: service_healthy
    environment:
      - VAULT_API_ADDR=http://vault:8200

  db:
    container_name: postgres_container
    build:
      context: ./postgres
      dockerfile: Dockerfile
    volumes:
      - ./vault_data/cre/database:/.vault
      - ./postgres_data:/data/postgres
    networks:
      - mynetwork
      - vault_nework
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      vault:
        condition: service_healthy
    environment:
      - VAULT_API_ADDR=http://vault:8200

  frontend:
    container_name: frontend_container
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./vault_data/cre/frontend:/.vault
      - ./frontend:/app:cached  # Mount the code directory
      - /app/node_modules        # Ensure node_modules is not overwritten by host
    networks:
      - mynetwork
      - vault_nework
    depends_on:
      vault:
        condition: service_healthy
    environment:
      - VAULT_API_ADDR=http://vault:8200

  vault:
    container_name: vault_container
    image: hashicorp/vault:1.7
    networks:
      - vault_nework
    volumes:
      - ./vault_data:/vault
      - ./vault_data/file:/vault/file
    cap_add:
      - IPC_LOCK
    env_file:
      - .env
    entrypoint: ["/bin/sh", "-c", "/vault/file/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    expose:
      - "8200"

networks:
  mynetwork:
    driver: bridge
  vault_nework:
    driver: bridge

